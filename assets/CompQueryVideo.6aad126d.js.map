{"version":3,"file":"CompQueryVideo.6aad126d.js","sources":["../../packages/home/components/CompQueryVideo.vue"],"sourcesContent":["<template>\n  <div ref=\"el\" class=\"w-full\">\n    <div v-if=\"listVideo\">\n      <VideoRow\n        :name=\"config.title\"\n        :title-links-to=\"{\n          path: '/search-result',\n          query: { i: config.query, order: config.order, visible_site: config.additionalConstraint },\n        }\"\n        :videos=\"listVideo.videos\"\n        :count=\"count\"\n        :rows=\"config.video_rows\"\n        :video-show-title=\"config.video_show_title\"\n        :video-show-date=\"config.video_show_date\"\n      />\n    </div>\n    <div v-else>\n      <VideoRowPlaceholder :count=\"count\" :rows=\"config.video_rows\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, reactive, ref, shallowRef, watchEffect } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { useElementSize, useIntersectionObserver } from '@vueuse/core'\nimport VideoRow from './VideoRow.vue'\nimport VideoRowPlaceholder from './VideoRowPlaceholder.vue'\nimport { gql, useLazyQuery, useResult } from '@/graphql'\nimport type { Query } from '@/graphql'\n\nconst props = withDefaults(\n  defineProps<{\n    data?: string\n  }>(),\n  {\n    data: '{}',\n  },\n)\n\nconst { t } = useI18n()\n\ninterface HomeCompDataList {\n  query: string\n  order: string\n  additionalConstraint: string\n  title: string\n  title_pos: 'tl' | 'tr' | 'bl' | 'br'\n  video_show_title: boolean\n  video_show_date: boolean\n  video_rows: number\n}\n\nconst config = reactive<HomeCompDataList>({\n  query: '',\n  order: 'latest',\n  additionalConstraint: '',\n  title: t('home.home.components.query-video.default-title'),\n  title_pos: 'tl',\n  video_show_title: true,\n  video_show_date: true,\n  video_rows: 1,\n  ...JSON.parse(props.data),\n})\n\nconst { result, load, fetchMore, forceDisabled } = useLazyQuery<Query>(\n  gql`\n    query ($limit: Int!, $query: String!, $order: String!, $additionalConstraint: String) {\n      listVideo(\n        para: {\n          offset: 0\n          limit: $limit\n          humanReadableTag: true\n          query: $query\n          order: $order\n          additionalConstraint: $additionalConstraint\n        }\n      ) {\n        videos {\n          id\n          item {\n            title\n            coverImage\n          }\n          meta {\n            createdAt\n          }\n        }\n      }\n    }\n  `,\n  {},\n  {\n    notifyOnNetworkStatusChange: true,\n  },\n)\n\nconst el = shallowRef<HTMLElement | null>(null)\nconst { width } = useElementSize(el)\nconst count = computed(() => Math.floor(width.value / (240 + 16)) * config.video_rows)\nconst isInc = ref(false)\nlet shownCount = 0\nuseIntersectionObserver(\n  el,\n  ([{ isIntersecting }]) => {\n    isInc.value = isIntersecting\n  },\n  { rootMargin: '200px 200px 200px 200px' },\n)\nwatchEffect(() => {\n  if (shownCount === count.value || !isInc.value)\n    return\n  shownCount = count.value\n  if (result.value && shownCount <= result.value.listVideo.videos.length)\n    return\n  if (forceDisabled.value) {\n    load(undefined, {\n      query: config.query,\n      order: config.order,\n      additionalConstraint: config.additionalConstraint,\n      limit: count.value,\n    })\n  }\n  else {\n    fetchMore({\n      variables: {\n        query: config.query,\n        order: config.order,\n        additionalConstraint: config.additionalConstraint,\n        limit: count.value,\n      },\n      updateQuery(previousQueryResult, { fetchMoreResult }) {\n        if (!fetchMoreResult)\n          return previousQueryResult\n        return fetchMoreResult\n      },\n    })\n  }\n})\n\nconst listVideo = useResult(result, null, data => data.listVideo)\n</script>\n"],"names":["t","useI18n","config","reactive","props","result","load","fetchMore","forceDisabled","useLazyQuery","gql","el","shallowRef","width","useElementSize","count","computed","isInc","ref","shownCount","useIntersectionObserver","isIntersecting","watchEffect","previousQueryResult","fetchMoreResult","listVideo","useResult","data"],"mappings":"ivBAwCA,CAAA,EAAAA,GAAAC,IAaAC,EAAAC,EAAA,CAA0C,MAAA,GACjC,MAAA,SACA,qBAAA,GACe,MAAAH,EAAA,gDAAA,EACmC,UAAA,KAC9C,iBAAA,GACO,gBAAA,GACD,WAAA,EACL,GAAA,KAAA,MAAAI,EAAA,IAAA,CACY,CAAA,EAG1B,CAAA,OAAAC,EAAA,KAAAC,EAAA,UAAAC,EAAA,cAAAC,CAAA,EAAAC,EAAmDC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACjD,CAAA,EAyBC,CACD,4BAAA,EAC+B,CAC/B,EAGFC,EAAAC,EAAA,IAAA,EACA,CAAA,MAAAC,CAAA,EAAAC,EAAAH,CAAA,EACAI,EAAAC,EAAA,IAAA,KAAA,MAAAH,EAAA,OAAA,IAAA,GAAA,EAAAX,EAAA,UAAA,EACAe,EAAAC,EAAA,EAAA,EACA,IAAAC,EAAA,EACAC,EAAAT,EACE,CAAA,CAAA,CAAA,eAAAU,CAAA,CAAA,IAAA,CAEEJ,EAAA,MAAAI,CAAc,EAChB,CAAA,WAAA,yBAAA,CACwC,EAE1CC,EAAA,IAAA,CACEH,IAAAJ,EAAA,OAAA,CAAAE,EAAA,QAEAE,EAAAJ,EAAA,MACA,EAAAV,EAAA,OAAAc,GAAAd,EAAA,MAAA,UAAA,OAAA,UAEAG,EAAA,MACEF,EAAA,OAAA,CAAgB,MAAAJ,EAAA,MACA,MAAAA,EAAA,MACA,qBAAAA,EAAA,qBACe,MAAAa,EAAA,KAChB,CAAA,EAIfR,EAAA,CAAU,UAAA,CACG,MAAAL,EAAA,MACK,MAAAA,EAAA,MACA,qBAAAA,EAAA,qBACe,MAAAa,EAAA,KAChB,EACf,YAAAQ,EAAA,CAAA,gBAAAC,GAAA,CAEE,OAAAA,GACED,CACK,CACT,CAAA,GAEJ,CAAA,EAGF,MAAAE,EAAAC,EAAArB,EAAA,KAAAsB,GAAAA,EAAA,SAAA"}