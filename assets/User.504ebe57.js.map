{"version":3,"file":"User.504ebe57.js","sources":["../../packages/user/components/UserInput.vue","../../packages/user/User.vue"],"sourcesContent":["<template>\n  <div class=\"relative w-full\">\n    <template v-if=\"type === 'richText'\">\n      <textarea v-model=\"value\" class=\"input input-rich w-full\" rows=\"4\" :placeholder=\"placeholder\" />\n    </template>\n    <template v-else-if=\"type === 'singleLine'\">\n      <input v-model=\"value\" class=\"input input-single w-full\" :placeholder=\"placeholder\">\n      <div class=\"text-gray-300 absolute top-1/2 transform -translate-y-1/2 left-1\">\n        <slot name=\"prepend\" />\n      </div>\n    </template>\n    <template v-else-if=\"type === 'password'\">\n      <input v-model=\"value\" class=\"input input-single w-full\" type=\"password\" :placeholder=\"placeholder\">\n      <div class=\"i-uil:padlock text-gray-300 absolute top-1/2 transform -translate-y-1/2 left-1\" />\n    </template>\n    <template v-else-if=\"type === 'email'\">\n      <input v-model=\"value\" class=\"input input-single w-full\" type=\"email\" :placeholder=\"placeholder\">\n      <div class=\"i-uil:envelope text-gray-300 absolute top-1/2 transform -translate-y-1/2 left-1\" />\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useVModel } from '@vueuse/core'\nimport { useI18n } from 'vue-i18n'\nimport { computed } from 'vue'\n\nconst props = withDefaults(\n  defineProps<{\n    value: string\n    type?: 'richText' | 'singleLine' | 'password' | 'email'\n    placeholder?: string\n  }>(),\n  {\n    type: 'singleLine',\n  },\n)\n\nconst emit = defineEmits<{\n  (event: 'update:value', value: string): void\n}>()\n\nconst { t } = useI18n()\n\nconst value = useVModel(props, 'value', emit)\n\nconst placeholder = computed(() => props.placeholder ?? t('user.input.placeholder'))\n</script>\n\n<style lang=\"postcss\" scoped>\n.input {\n  @apply border-purple-300 text-gray-500 dark:text-gray-200 border border-solid focus:outline-none bg-white dark:bg-opacity-5 rounded hover:border-purple-400 transition duration-300 focus:border-blue-300 placeholder-gray-300;\n}\n.input-single {\n  @apply h-10 pl-7 pr-3 py-2;\n}\n.input-rich {\n  @apply h-auto py-1 px-3;\n}\n</style>\n","<template>\n  <LayoutDefault :show-search-bar=\"false\">\n    <!-- 个人中心 -->\n    <div v-if=\"user.isLogin\" class=\"w-full h-full flex justify-start flex-col md:flex-row\">\n      <div class=\"half-container justify-center items-center\">\n        <UserAvatar\n          :title=\"username\"\n          :image=\"avatar\"\n          class=\"w-3/5 md:w-1/2 mt-10 rounded-full transition duration-300 overflow-hidden transform\"\n        />\n        <p class=\"mt-5\">\n          {{ t('user.user-page.avatar.current') }}\n        </p>\n        <p class=\"mt-8 px-4\">\n          {{ t('user.user-page.avatar.requirement') }}\n        </p>\n        <div class=\"w-full mt-20 flex flex-col justify-start items-center\">\n          <input\n            ref=\"chooseAvatarInput\"\n            class=\"hidden\"\n            type=\"file\"\n            accept=\".jpg,.jpeg,.png,.bmp,.gif\"\n            @input=\"onGetChosenAvatar\"\n          >\n          <button class=\"w-1/2 md:w-1/4 btn btn-primary\" @click=\"onChooseAvatar\">\n            {{ t('user.user-page.avatar.choose-image') }}\n          </button>\n          <button class=\"mt-5 w-1/2 md:w-1/4 btn btn-default\" @click=\"onUploadAvatar\">\n            {{ t('user.user-page.avatar.upload') }}\n          </button>\n        </div>\n      </div>\n      <div class=\"half-container p-8 md:p-16 justify-start items-start\">\n        <!-- username input -->\n        <div class=\"w-full\">\n          <div v-if=\"isEditingUsername\" class=\"flex flex-col justify-between items-start lg:flex-row\">\n            <UserInput\n              :value=\"username\"\n              type=\"singleLine\"\n              :placeholder=\"t('user.user-page.username.placeholder')\"\n              class=\"w-full lg:w-3/5\"\n              @update:value=\"tempUsername = $event\"\n            >\n              <template #prepend>\n                <div class=\"i-uil:user\" />\n              </template>\n            </UserInput>\n            <div class=\"w-full lg:w-2/5 flex justify-evenly mt-5 lg:mt-0\">\n              <button\n                class=\"btn btn-default w-3/7 sm:w-1/3 lg:w-2/5 flex justify-evenly items-center\"\n                @click=\"onUpdateUsername\"\n              >\n                <div class=\"i-uil:edit-alt\" />\n                {{ t('user.user-page.username.modify') }}\n              </button>\n              <button class=\"btn btn-default w-3/7 sm:w-1/3 lg:w-2/5\" @click=\"isEditingUsername = false\">\n                {{ t('user.user-page.username.cancel') }}\n              </button>\n            </div>\n          </div>\n          <div v-else class=\"flex flex-row justify-start\">\n            <div>{{ username }}</div>\n            <div\n              class=\"i-uil:edit-alt ml-2 cursor-pointer hover:text-blue-400 transition duration-300\"\n              @click=\"onOpenUsernameEditor\"\n            />\n          </div>\n        </div>\n        <!-- description input -->\n        <div class=\"w-full lg:w-4/5 mt-4\">\n          <UserInput\n            v-model:value=\"description\"\n            type=\"richText\"\n            :placeholder=\"t('user.user-page.description.placeholder')\"\n          />\n          <button class=\"btn btn-default w-1/2 sm:w-1/4 mt-4\" @click=\"onSaveDescription\">\n            {{ t('user.user-page.description.save') }}\n          </button>\n        </div>\n        <!-- password modify -->\n        <div class=\"w-full mt-4 flex flex-col justify-start items-start\">\n          <p>{{ t('user.user-page.password.title') }}</p>\n          <div class=\"w-full mt-4 flex flex-col justify-start items-start\">\n            <div class=\"password-row\">\n              <p class=\"password-row-label\">\n                {{ t('user.user-page.password.old') }}\n              </p>\n              <UserInput\n                v-model:value=\"oldPassword\"\n                type=\"password\"\n                :placeholder=\"t('user.user-page.password.oldPlaceholder')\"\n                class=\"password-row-input\"\n              />\n            </div>\n            <div class=\"password-row mt-6\">\n              <p class=\"password-row-label\">\n                {{ t('user.user-page.password.new') }}\n              </p>\n              <UserInput\n                v-model:value=\"newPassword\"\n                type=\"password\"\n                :placeholder=\"t('user.user-page.password.newPlaceholder')\"\n                class=\"password-row-input\"\n              />\n            </div>\n            <div class=\"password-row mt-6\">\n              <p class=\"password-row-label\">\n                {{ t('user.user-page.password.confirmNew') }}\n              </p>\n              <UserInput\n                v-model:value=\"newConfirmedPassword\"\n                type=\"password\"\n                :placeholder=\"t('user.user-page.password.confirmNewPlaceholder')\"\n                class=\"password-row-input\"\n              />\n            </div>\n          </div>\n          <div class=\"w-full mt-4 flex flex-row justify-start\">\n            <div class=\"password-row\">\n              <p class=\"password-row-label\" />\n              <div class=\"password-row-input flex flex-row justify-between\">\n                <button class=\"btn btn-default w-2/5 sm:w-1/3\" @click=\"onCommitNewPassword\">\n                  {{ t('user.user-page.password.commit') }}\n                </button>\n                <button class=\"btn btn-default w-2/5 sm:w-1/3\" @click=\"onResetPassword\">\n                  {{ t('user.user-page.password.reset') }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- email bind -->\n        <div class=\"w-full lg:w-4/5 mt-4 flex flex-col justify-start\">\n          <p>{{ t('user.user-page.email.title') }}</p>\n          <UserInput\n            v-model:value=\"newEmail\"\n            class=\"w-full mt-4\"\n            type=\"email\"\n            :placeholder=\"t('user.user-page.email.placeholder')\"\n          />\n          <button class=\"mt-4 w-1/2 sm:w-1/4 btn btn-default\" @click=\"onBindEmail\">\n            {{ t('user.user-page.email.bind') }}\n          </button>\n          <div class=\"mt-4 w-full flex flex-row justify-start\">\n            <p>{{ t('user.user-page.email.boundEmail') }}：{{ email ?? t('user.user-page.email.none') }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div v-else class=\"text-lg\">\n      <RouterLink to=\"/user/login\">\n        {{ t('user.user-page.not-logged-in') }}\n      </RouterLink>\n    </div>\n  </LayoutDefault>\n</template>\n\n<script lang=\"ts\" setup>\nimport { reactive, ref, watch } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { templateRef } from '@vueuse/core'\nimport { useAuth } from '.'\nimport UserAvatar from '@/user/components/UserAvatar.vue'\nimport UserInput from '@/user/components/UserInput.vue'\nimport { gql, injectClient } from '@/graphql'\nimport { setSiteTitle } from '@/common/libs/setSiteTitle'\nimport { MessageType, PvMessage } from '@/ui/libs/PvMessage'\nimport { progressing } from '@/common/libs/progressing'\n\ninterface HTMLInputEvent extends Event {\n  target: HTMLInputElement & EventTarget\n}\n\nconst { t } = useI18n()\nconst user = useAuth()\n\nsetSiteTitle(`${t('user.user-page.title')} - PatchyVideo`)\n\nconst isEditingUsername = ref(false)\nconst avatar = ref('')\nconst chooseAvatarInput = templateRef<HTMLInputElement | null>('chooseAvatarInput')\nconst username = ref('')\nconst tempUsername = ref('')\nconst oldPassword = ref('')\nconst newPassword = ref('')\nconst newConfirmedPassword = ref('')\nconst email = ref('')\nconst newEmail = ref('')\nconst description = ref('')\nconst client = injectClient()\nwatch(\n  () => user.isLogin,\n  async (isLoginState) => {\n    if (!isLoginState)\n      return\n    // TODO: useQuery\n    const res = await client.query({\n      query: gql`\n        query ($uid: String!) {\n          getUser(para: { uid: $uid }) {\n            id\n            desc\n            username\n            image\n            email\n            gravatar\n          }\n        }\n      `,\n      variables: {\n        uid: user.uid,\n      },\n    })\n    const userInfo = reactive(res.data.getUser)\n    avatar.value = userInfo.image\n    username.value = userInfo.username\n    email.value = userInfo.email || ''\n    description.value = userInfo.desc\n  },\n  { immediate: true },\n)\nconst onGetChosenAvatar = (e: HTMLInputEvent) => {\n  const files = e.target.files\n  if (!files?.length) {\n    PvMessage({ message: '请选择头像文件！', type: MessageType.error })\n    return\n  }\n  const fr = new FileReader()\n  fr.readAsDataURL(files[0])\n  fr.onload = (e) => {\n    avatar.value = e?.target?.result?.toString() ?? ''\n  }\n  // fr.onloadend = () => {}\n}\nconst onChooseAvatar = () => {\n  chooseAvatarInput.value?.click()\n}\nconst onUploadAvatar = () => {\n  progressing()\n}\nconst onOpenUsernameEditor = () => {\n  isEditingUsername.value = true\n  tempUsername.value = username.value\n}\nconst onUpdateUsername = () => {\n  progressing()\n}\nconst onSaveDescription = () => {\n  progressing()\n}\nconst onCommitNewPassword = () => {\n  progressing()\n}\nconst onResetPassword = () => {\n  oldPassword.value = newPassword.value = newConfirmedPassword.value = ''\n}\nconst onBindEmail = () => {\n  progressing()\n}\n</script>\n\n<style lang=\"postcss\" scoped>\n/* TODO remove apply, but user is also needed to rewrite too so... */\n.half-container {\n  @apply w-full h-1/2 md:w-1/2 md:h-full flex flex-col;\n}\n.btn {\n  @apply h-10 rounded transition duration-300 focus:outline-none;\n}\n.btn-primary {\n  @apply bg-blue-500 border border-solid border-blue-500 hover:bg-blue-400 hover:border-blue-400 text-white;\n  @apply dark:bg-white dark:bg-opacity-0 dark:text-blue-400 dark:hover:bg-opacity-20;\n}\n.btn-default {\n  @apply border-purple-400 border-double border-2 bg-white hover:border-purple-800 text-gray-400 hover:text-gray-600;\n  @apply dark:bg-opacity-0 dark:border-white dark:hover:border-purple-400 dark:text-white dark:hover:text-gray-400;\n}\n.password-row {\n  @apply w-full lg:w-4/5 flex flex-row justify-start items-center;\n  > .password-row-label {\n    @apply w-1/4 md:w-1/5 text-right;\n  }\n  > .password-row-input {\n    @apply w-3/4 md:w-4/5 ml-4;\n  }\n}\n</style>\n"],"names":["t","useI18n","value","useVModel","props","emit","placeholder","computed","_a","user","useAuth","setSiteTitle","isEditingUsername","ref","avatar","chooseAvatarInput","templateRef","username","tempUsername","oldPassword","newPassword","newConfirmedPassword","email","newEmail","description","client","injectClient","watch","isLoginState","res","gql","userInfo","reactive","onGetChosenAvatar","e","files","PvMessage","MessageType","fr","e2","_c","_b","onChooseAvatar","onUploadAvatar","progressing","onOpenUsernameEditor","onUpdateUsername","onSaveDescription","onCommitNewPassword","onResetPassword","onBindEmail"],"mappings":"gtCA0CA,CAAA,EAAAA,GAAAC,IAEAC,EAAAC,GAAAC,EAAA,QAAAC,CAAA,EAEAC,EAAAC,GAAA,IAAA,OAAA,OAAAC,EAAAJ,EAAA,cAAA,KAAAI,EAAAR,EAAA,wBAAA,EAAA,yvEC+HA,KAAA,CAAA,GAAAC,IACAQ,EAAAC,KAEAC,GAAA,GAAA,EAAA,sBAAA,iBAAA,EAEA,MAAAC,EAAAC,EAAA,EAAA,EACAC,EAAAD,EAAA,EAAA,EACAE,EAAAC,GAAA,mBAAA,EACAC,EAAAJ,EAAA,EAAA,EACAK,EAAAL,EAAA,EAAA,EACAM,EAAAN,EAAA,EAAA,EACAO,EAAAP,EAAA,EAAA,EACAQ,EAAAR,EAAA,EAAA,EACAS,EAAAT,EAAA,EAAA,EACAU,EAAAV,EAAA,EAAA,EACAW,EAAAX,EAAA,EAAA,EACAY,EAAAC,KACAC,GAAA,IAAAlB,EAAA,QACa,MAAAmB,GAAA,CAET,GAAA,CAAAA,EACE,OAEF,MAAAC,EAAA,MAAAJ,EAAA,MAAA,CAA+B,MAAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACtB,UAAA,CAYI,IAAArB,EAAA,GACC,CACZ,CAAA,EAEFsB,EAAAC,GAAAH,EAAA,KAAA,OAAA,EACAf,EAAA,MAAAiB,EAAA,MACAd,EAAA,MAAAc,EAAA,SACAT,EAAA,MAAAS,EAAA,OAAA,GACAP,EAAA,MAAAO,EAAA,IAA6B,EAC/B,CAAA,UAAA,EAAA,CACkB,EAEpB,MAAAE,EAAAC,GAAA,CACE,MAAAC,EAAAD,EAAA,OAAA,MACA,GAAA,EAAAC,GAAA,MAAAA,EAAA,QAAA,CACEC,GAAA,CAAA,QAAA,WAAA,KAAAC,GAAA,KAAA,CAAA,EACA,MAAA,CAEF,MAAAC,EAAA,IAAA,WACAA,EAAA,cAAAH,EAAA,EAAA,EACAG,EAAA,OAAAC,GAAA,WACEzB,EAAA,OAAA0B,GAAAC,GAAAjC,EAAA+B,GAAA,YAAAA,EAAA,SAAA,YAAA/B,EAAA,SAAA,YAAAiC,EAAA,aAAA,KAAAD,EAAA,EAAgD,CAClD,EAGFE,EAAA,IAAA,QACElC,EAAAO,EAAA,QAAA,MAAAP,EAAA,OAA+B,EAEjCmC,EAAA,IAAA,CACEC,GAAY,EAEdC,EAAA,IAAA,CACEjC,EAAA,MAAA,GACAM,EAAA,MAAAD,EAAA,KAA8B,EAEhC6B,EAAA,IAAA,CACEF,GAAY,EAEdG,EAAA,IAAA,CACEH,GAAY,EAEdI,EAAA,IAAA,CACEJ,GAAY,EAEdK,EAAA,IAAA,CACE9B,EAAA,MAAAC,EAAA,MAAAC,EAAA,MAAA,EAAqE,EAEvE6B,EAAA,IAAA,CACEN,GAAY"}