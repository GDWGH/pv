{"version":3,"file":"SearchResult.ed6b4112.js","sources":["../../packages/search/components/SearchVideo.vue","../../packages/search/components/SearchPlaylist.vue","../../packages/search/SearchResult.vue"],"sourcesContent":["<template>\n  <div v-if=\"status === 'loading'\">\n    <div v-text=\"t('search.search-result.video.main-body.loading.searching')\" />\n    <!-- Mobile View -->\n    <div v-if=\"screenSizes['<md']\">\n      <div v-for=\"index in limit\" :key=\"index\" class=\"py-1 flex hover:bg-gray-50 dark:hover:bg-gray-800\">\n        <div class=\"w-2/5 mr-0.5\">\n          <CoverPlaceholder class=\"rounded-md\" />\n        </div>\n        <div class=\"w-3/5 text-sm pb-1 flex flex-wrap content-between\">\n          <div class=\"line-clamp-2 overflow-ellipsis overflow-hidden rounded-md w-full bg-gray-400 dark:bg-gray-600\">\n            &nbsp;\n          </div>\n          <div class=\"flex text-xs h-4 align-middle rounded-md w-2/5 bg-gray-400 dark:bg-gray-600\" />\n        </div>\n      </div>\n    </div>\n    <!-- Desktop View -->\n    <div v-else class=\"search-result-backimg flex flex-wrap justify-evenly bg-center bg-no-repeat bg-contain\">\n      <div\n        v-for=\"index in limit\"\n        :key=\"index\"\n        class=\"w-12/50 my-2 border border-purple-400 shadow-sm rounded-lg bg-white bg-opacity-50 dark:border-purple-800 dark:bg-gray-900\"\n      >\n        <CoverPlaceholder class=\"rounded-md\" />\n        <div class=\"p-3 text-left text-sm lg:text-base\">\n          <div class=\"line-clamp-2 overflow-ellipsis overflow-hidden rounded-md bg-gray-300 dark:bg-gray-600\">\n            &nbsp;\n          </div>\n          <div class=\"flex text-xs h-4 mt-1 align-middle rounded-md bg-gray-300 dark:bg-gray-600\" />\n        </div>\n      </div>\n    </div>\n  </div>\n  <div v-else-if=\"status === 'error'\">\n    <div v-text=\"t('search.search-result.video.main-body.failed.search-failed')\" />\n    <div v-text=\"t('search.search-result.video.main-body.failed.search-failed-reason') + errMsg\" />\n  </div>\n  <div v-else-if=\"status === 'result'\">\n    <div class=\"flex flex-wrap-reverse justify-between items-end border-b pb-1\">\n      <div v-if=\"count === 0\" v-text=\"t('search.search-result.video.main-body.successful.search-no-result')\" />\n      <div\n        v-else\n        v-text=\"t('search.search-result.video.main-body.successful.search-result-count', { count })\"\n      />\n      <div class=\"flex self-center space-x-2\">\n        <label\n          v-for=\"sites in VisibleSites\"\n          :key=\"sites.value\"\n          class=\"px-2 py-1 cursor-pointer text-gray-400 text-sm font-semibold md:text-base md:font-bold md:px-3 md:py-1\"\n          :class=\"{\n            'text-black rounded-full bg-gray-100 dark:text-white dark:bg-gray-500': sites.value === visibleSite,\n          }\"\n          @click=\"changeVisibleSites(sites.value)\"\n          v-text=\"sites.name\"\n        />\n      </div>\n    </div>\n    <!-- Mobile View -->\n    <div v-if=\"screenSizes['<md']\">\n      <RouterLink\n        v-for=\"video in videos\"\n        :key=\"video.item.title\"\n        class=\"py-1 flex hover:bg-gray-50 dark:hover:bg-gray-800\"\n        :to=\"`/video/${video.id.toHexString()}`\"\n        target=\"_blank\"\n      >\n        <div class=\"relative w-2/5 mr-0.5\">\n          <Cover :title=\"video.item.title\" :cover-image=\"video.item.coverImage\" class=\"rounded-sm\" />\n          <div\n            v-if=\"video.clearence === 0\"\n            class=\"absolute flex flex-col justify-center items-center top-0 bottom-0 w-full bg-gray-200 bg-opacity-80 hover:bg-opacity-20 transition-background-color\"\n          >\n            <div class=\"i-uil:eye-slash text-4xl\" />\n            <div class=\"text-lg\">\n              {{ t('search.search-result.video.video.hidden') }}\n            </div>\n          </div>\n        </div>\n        <div class=\"w-3/5 text-sm pb-1 flex flex-wrap content-between\">\n          <div v-if=\"video.item.partName\" class=\"overflow-hidden w-full\">\n            <a class=\"inline-block w-full truncate\">{{ video.item.title }}</a>\n            <div class=\"text-xs inline-block w-full truncate text-gray-600 dark:text-gray-300\">\n              <label class=\"font-semibold\">{{ `P${pageOfVideo(video.item.url)}:` }}</label>{{ video.item.partName }}\n            </div>\n          </div>\n          <a v-else class=\"line-clamp-2 overflow-ellipsis overflow-hidden w-full\">{{ video.item.title }}</a>\n          <div class=\"flex text-xs h-4 align-middle\" :title=\"video.item.site\">\n            <div>{{ t('search.search-result.video.video.source-site') }}</div>\n            <img class=\"cover h-full\" :src=\"getSiteImage(video.item.site)\" :alt=\"video.item.site\">\n          </div>\n        </div>\n      </RouterLink>\n    </div>\n    <!-- Desktop View -->\n    <div v-else class=\"search-result-backimg flex flex-wrap justify-evenly bg-center bg-no-repeat bg-contain\">\n      <RouterLink\n        v-for=\"video in videos\"\n        :key=\"video.item.title\"\n        class=\"w-12/50 my-2 border border-purple-400 shadow-sm rounded-lg overflow-hidden bg-white bg-opacity-50 dark:border-purple-800 dark:bg-gray-900\"\n        :to=\"`/video/${video.id.toHexString()}`\"\n        target=\"_blank\"\n      >\n        <div class=\"relative\">\n          <Cover :title=\"video.item.title\" :cover-image=\"video.item.coverImage\" />\n          <div\n            v-if=\"video.clearence === 0\"\n            class=\"absolute flex flex-col justify-center items-center top-0 bottom-0 w-full bg-gray-200 bg-opacity-80 hover:bg-opacity-20 transition-background-color\"\n          >\n            <div class=\"i-uil:eye-slash text-8xl\" />\n            <div class=\"text-2xl\">\n              {{ t('search.search-result.video.video.hidden') }}\n            </div>\n          </div>\n        </div>\n        <div class=\"p-3 text-left text-sm lg:text-base\">\n          <div v-if=\"video.item.partName\">\n            <a class=\"inline-block w-full truncate\" :title=\"video.item.title\">{{ video.item.title }}</a>\n            <div\n              class=\"text-xs inline-block w-full truncate text-gray-600 dark:text-gray-300\"\n              :title=\"video.item.partName\"\n            >\n              <label class=\"font-semibold\">{{ `P${pageOfVideo(video.item.url)}: ` }}</label>{{ video.item.partName }}\n            </div>\n          </div>\n          <a v-else class=\"line-clamp-2 overflow-ellipsis overflow-hidden\" :title=\"video.item.title\">{{\n            video.item.title\n          }}</a>\n          <div class=\"flex text-xs h-4 align-middle\" :title=\"video.item.site\">\n            <div>{{ t('search.search-result.video.video.source-site') }}</div>\n            <img class=\"cover\" :src=\"getSiteImage(video.item.site)\" :alt=\"video.item.site\">\n          </div>\n        </div>\n      </RouterLink>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, watch, watchEffect } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useVModels } from '@vueuse/core'\nimport CoverPlaceholder from '@/video/components/CoverPlaceholder.vue'\nimport Cover from '@/video/components/Cover.vue'\nimport { getSiteImage } from '@/common/libs/imageUrl'\nimport { backTop } from '@/ui/libs/backTop'\nimport { pageOfVideo } from '@/video/libs/biliHelper'\nimport { gql, useQuery, useResult } from '@/graphql'\nimport type { Query, schema } from '@/graphql'\nimport { screenSizes } from '@/css'\nimport { startProgress, stopProgress } from '@/nprogress'\n\nconst props = defineProps<{\n  query: string\n  limit: number\n  offset: number\n  order: string\n  visibleSite: string\n  pageCount: number\n}>()\nconst emit = defineEmits<{\n  (event: 'update:query', value: string): void\n  (event: 'update:limit', value: number): void\n  (event: 'update:offset', value: number): void\n  (event: 'update:order', value: string): void\n  (event: 'update:visibleSite', value: string): void\n  (event: 'update:pageCount', value: number): void\n}>()\n\nconst { t } = useI18n()\nconst route = useRoute()\nconst router = useRouter()\nconst status = ref<'loading' | 'result' | 'error'>()\nconst errMsg = ref('')\nconst count = ref(0)\nconst videos = ref<schema.Video[]>([])\nconst { query, limit, offset, order, visibleSite, pageCount } = useVModels(props, emit)\n\nconst VisibleSites = [\n  {\n    value: '',\n    name: t('search.search-result.video.visible-sites.all'),\n  },\n  {\n    value: 'ANY(site:acfun site:bilibili site:zcool)',\n    name: t('search.search-result.video.visible-sites.home'),\n  },\n  {\n    value: 'ANY(site:nicovideo site:twitter site:youtube site:ipfs)',\n    name: t('search.search-result.video.visible-sites.abroad'),\n  },\n]\n\nconst { result, loading, onError, fetchMore } = useQuery<Query>(\n  gql`\n    query ($offset: Int!, $limit: Int!, $query: String!, $order: String!, $additionalConstraint: String) {\n      listVideo(\n        para: {\n          offset: $offset\n          limit: $limit\n          humanReadableTag: true\n          query: $query\n          order: $order\n          additionalConstraint: $additionalConstraint\n        }\n      ) {\n        count\n        pageCount\n        videos {\n          id\n          item {\n            coverImage\n            title\n            site\n            cid\n            partName\n            url\n          }\n          clearence\n        }\n      }\n    }\n  `,\n  {\n    offset: offset.value * limit.value,\n    limit: limit.value,\n    query: query.value,\n    order: order.value,\n    additionalConstraint: visibleSite.value,\n  },\n  {\n    notifyOnNetworkStatusChange: true,\n  },\n)\nwatchEffect(() => {\n  if (loading.value) {\n    status.value = 'loading'\n    startProgress()\n  }\n  else {\n    status.value = 'result'\n    stopProgress()\n  }\n})\n\nconst resultData = useResult(result, null, data => data?.listVideo)\nwatchEffect(() => {\n  if (resultData.value) {\n    count.value = resultData.value.count\n    pageCount.value = resultData.value.pageCount\n    videos.value = resultData.value.videos\n  }\n})\nonError((err) => {\n  errMsg.value = err.message\n  status.value = 'error'\n})\n\n// Refresh query result for props change\nwatch(\n  props,\n  () => {\n    backTop()\n    fetchMore({\n      variables: {\n        offset: offset.value * limit.value,\n        limit: limit.value,\n        query: query.value,\n        order: order.value,\n        additionalConstraint: visibleSite.value,\n      },\n      updateQuery(previousQueryResult, { fetchMoreResult }) {\n        if (!fetchMoreResult)\n          return previousQueryResult\n        return fetchMoreResult\n      },\n    })\n  },\n  { deep: true },\n)\n\n/* Change the router query to trigger the search function */\nfunction changeVisibleSites(value: string): void {\n  localStorage.setItem('VisibleSite', value)\n  const query = JSON.parse(JSON.stringify(route.query))\n  query.page = 0\n  query.visible_site = value\n  router.push({ path: route.path, query })\n}\n</script>\n\n<style lang=\"postcss\" scoped>\n.search-result-backimg {\n  background-image: url('../assets/SearchResultBackImg.png');\n}\n</style>\n","<template>\n  <div v-if=\"status === 'loading'\">\n    <div class=\"border-b pb-1\" v-text=\"t('search.search-result.video.main-body.loading.searching')\" />\n    <!-- Mobile View -->\n    <div v-if=\"screenSizes['<md']\">\n      <div v-for=\"index in limit\" :key=\"index\" class=\"py-1 flex text-sm hover:bg-gray-50 dark:hover:bg-gray-800\">\n        <div class=\"w-2/5 mr-0.5\">\n          <CoverPlaceholder class=\"rounded-md\" />\n        </div>\n        <div class=\"w-3/5 flex flex-wrap content-between\">\n          <div class=\"line-clamp-2 overflow-ellipsis overflow-hidden w-full rounded-md bg-gray-400 dark:bg-gray-600\">\n            &nbsp;\n          </div>\n          <div class=\"w-2/5 text-sm text-gray-600 dark:text-gray-300 rounded-md bg-gray-300 dark:bg-gray-600\">\n            &nbsp;\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Desktop View -->\n    <div v-else class=\"search-result-backimg flex flex-wrap justify-evenly bg-center bg-no-repeat bg-contain\">\n      <div\n        v-for=\"index in limit\"\n        :key=\"index\"\n        class=\"w-12/25 my-5 p-2 border border-purple-400 shadow-md rounded-lg bg-white bg-opacity-50 dark:border-purple-800 dark:bg-gray-900\"\n      >\n        <div\n          class=\"block border-b py-3 text-center text-xl truncate font-semibold lg:text-2xl rounded-md bg-gray-400 dark:bg-gray-600\"\n        >\n          &nbsp;\n        </div>\n        <div class=\"flex p-2 pt-3\">\n          <div class=\"w-1/2 mr-5\">\n            <CoverPlaceholder class=\"rounded-md\" />\n          </div>\n          <div class=\"w-1/2 py-2 flex flex-wrap content-between\">\n            <div class=\"line-clamp-3 w-full overflow-ellipsis overflow-hidden\">\n              <div v-for=\"i in 3\" :key=\"i\" class=\"mb-1 w-full rounded-md bg-gray-300 dark:bg-gray-600\">\n&nbsp;\n              </div>\n            </div>\n            <div class=\"w-full text-right text-sm text-gray-600 dark:text-gray-300\">\n              <div class=\"w-2/5 float-right rounded-md bg-gray-300 dark:bg-gray-600\">\n&nbsp;\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div v-else-if=\"status === 'error'\">\n    <div>{{ t('search.search-result.playlist.main-body.failed.search-failed') }}</div>\n    <div>{{ t('search.search-result.playlist.main-body.failed.search-failed-reason') + errMsg }}</div>\n  </div>\n  <div v-else-if=\"count === 0\">\n    {{ t('search.search-result.playlist.main-body.successful.search-no-result') }}\n  </div>\n  <div v-else-if=\"status === 'result'\">\n    <div class=\"border-b pb-1\">\n      {{ t('search.search-result.playlist.main-body.successful.search-result-count', { count }) }}\n    </div>\n    <!-- Mobile View -->\n    <div v-if=\"screenSizes['<md']\">\n      <RouterLink\n        v-for=\"playlist in playlists\"\n        :key=\"playlist.item.title\"\n        class=\"py-1 flex text-sm hover:bg-gray-50 dark:hover:bg-gray-800\"\n        :to=\"`/playlist/${playlist.id.toHexString()}`\"\n        target=\"_blank\"\n      >\n        <div class=\"w-2/5 mr-0.5\">\n          <div class=\"aspect-ratio-16/10 overflow-hidden rounded-sm\">\n            <img\n              class=\"object-cover h-full w-full dark:filter dark:brightness-75\"\n              :src=\"getCoverImage({ image: playlist.item.cover })\"\n            >\n          </div>\n        </div>\n        <div class=\"w-3/5 flex flex-wrap content-between\">\n          <div class=\"w-full\">\n            <div class=\"line-clamp-2 overflow-ellipsis overflow-hidden w-full flex items-center\">\n              <label v-if=\"playlist.item.private\" class=\"bg-purple-400 text-white text-xs rounded px-1\">Private</label>\n              {{ playlist.item.title }}\n            </div>\n            <div class=\"line-clamp-2 overflow-ellipsis overflow-hidden w-full text-xs text-gray-500\">\n              {{ playlist.item.desc }}\n            </div>\n          </div>\n          <div\n            class=\"w-full text-sm text-gray-600 dark:text-gray-300\"\n            v-text=\"t('search.search-result.playlist.playlist.playlist-count', { count: playlist.item.count })\"\n          />\n        </div>\n      </RouterLink>\n    </div>\n    <!-- Desktop View -->\n    <div v-else class=\"search-result-backimg flex flex-wrap justify-evenly bg-center bg-no-repeat bg-contain\">\n      <div\n        v-for=\"playlist in playlists\"\n        :key=\"playlist.item.title\"\n        class=\"w-12/25 my-5 p-2 border border-purple-400 shadow-md rounded-lg bg-white bg-opacity-50 dark:border-purple-800 dark:bg-gray-900\"\n      >\n        <RouterLink :to=\"`/playlist/${playlist.id}`\" target=\"_blank\" class=\"flex justify-center items-center space-x-1 border-b py-3\">\n          <label v-if=\"playlist.item.private\" class=\"bg-purple-400 text-white text-xs rounded px-1 py-0.5\">Private</label>\n          <div class=\"text-xl truncate font-semibold lg:text-2xl\">\n            {{ playlist.item.title }}\n          </div>\n        </RouterLink>\n        <div class=\"flex p-2 pt-3\">\n          <div class=\"w-1/2 mr-5\">\n            <div class=\"aspect-ratio-16/10 overflow-hidden\">\n              <img\n                class=\"object-cover h-full w-full rounded-lg dark:filter dark:brightness-75\"\n                :src=\"getCoverImage({ image: playlist.item.cover })\"\n              >\n            </div>\n          </div>\n          <div class=\"w-1/2 py-2 flex flex-wrap content-between\">\n            <div class=\"line-clamp-3 w-full overflow-ellipsis overflow-hidden\" v-text=\"playlist.item.desc\" />\n            <div\n              class=\"w-full text-right text-sm text-gray-600 dark:text-gray-300\"\n              v-text=\"t('search.search-result.playlist.playlist.playlist-count', { count: playlist.item.count })\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, watch, watchEffect } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { useVModels } from '@vueuse/core'\nimport CoverPlaceholder from '@/video/components/CoverPlaceholder.vue'\nimport { screenSizes } from '@/css'\nimport { getCoverImage } from '@/common/libs/imageUrl'\nimport { backTop } from '@/ui/libs/backTop'\nimport { gql, useQuery, useResult } from '@/graphql'\nimport type { Query, schema } from '@/graphql'\nimport { startProgress, stopProgress } from '@/nprogress'\n\nconst props = defineProps<{\n  query: string\n  limit: number\n  offset: number\n  order: string\n  pageCount: number\n}>()\n\nconst emit = defineEmits<{\n  (event: 'update:query', value: string): void\n  (event: 'update:limit', value: number): void\n  (event: 'update:offset', value: number): void\n  (event: 'update:order', value: string): void\n  (event: 'update:pageCount', value: number): void\n}>()\n\nconst { t } = useI18n()\nconst status = ref<'loading' | 'result' | 'error'>()\nconst errMsg = ref('')\nconst count = ref(0)\nconst playlists = ref<schema.Playlist[]>()\nconst { query, limit, offset, order, pageCount } = useVModels(props, emit)\n\nconst { result, loading, onError, fetchMore } = useQuery<Query>(\n  gql`\n    query ($offset: Int, $limit: Int, $query: String, $order: String) {\n      listPlaylist(para: { offset: $offset, limit: $limit, query: $query, order: $order }) {\n        playlists {\n          id\n          item {\n            cover\n            title\n            desc\n            count\n            private\n          }\n        }\n        count\n        pageCount\n      }\n    }\n  `,\n  {\n    offset: offset.value * limit.value,\n    limit: limit.value,\n    query: query.value,\n    order: order.value,\n  },\n  {\n    notifyOnNetworkStatusChange: true,\n  },\n)\nwatchEffect(() => {\n  if (loading.value) {\n    status.value = 'loading'\n    startProgress()\n  }\n  else {\n    status.value = 'result'\n    stopProgress()\n  }\n})\n\nconst resultData = useResult(result, null, data => data?.listPlaylist)\nwatchEffect(() => {\n  if (resultData.value) {\n    count.value = resultData.value.count\n    pageCount.value = resultData.value.pageCount\n    playlists.value = resultData.value.playlists\n  }\n})\nonError((err) => {\n  errMsg.value = err.message\n  status.value = 'error'\n})\n\n// Refresh query result for URL query change\nwatch(\n  props,\n  () => {\n    backTop()\n    fetchMore({\n      variables: {\n        offset: offset.value * limit.value,\n        limit: limit.value,\n        query: query.value,\n        order: order.value,\n      },\n      updateQuery(previousQueryResult, { fetchMoreResult }) {\n        if (!fetchMoreResult)\n          return previousQueryResult\n        return fetchMoreResult\n      },\n    })\n  },\n  { deep: true },\n)\n</script>\n\n<style lang=\"postcss\" scoped>\n.search-result-backimg {\n  background-image: url('../assets/SearchResultBackImg.png');\n}\n</style>\n","<template>\n  <LayoutDefault :show-search-bar=\"!screenSizes.sm\">\n    <div class=\"text-center flex flex-col justify-start items-center\">\n      <h3 v-if=\"screenSizes.sm\" class=\"text-lg font-semibold m-4 px-auto\">\n        {{ t('search.search-result.search-keywords') + queryWord }}\n      </h3>\n      <AutoComplete\n        v-if=\"screenSizes.sm\"\n        v-model:keyword=\"queryWord\"\n        class=\"w-2/5 md:w-4/6 lg:w-3/6\"\n        @search=\"searchResult\"\n      />\n    </div>\n\n    <div class=\"p-2 md:m-auto xl:w-9/10 2xl:w-4/5\">\n      <div class=\"my-2 md:m-0 md:flex md:justify-between\">\n        <div class=\"flex\">\n          <div\n            v-for=\"tabs in Tabs\"\n            :key=\"tabs.value\"\n            class=\"px-5 py-2 cursor-pointer text-gray-400 text-sm font-semibold border-t-4 border-transparent md:text-base md:font-bold md:p-5 md:pt-3\"\n            :class=\"{ 'text-black border-purple-300 dark:text-white': tabs.value === tab }\"\n            @click=\"changeTab(tabs.value)\"\n            v-text=\"tabs.name\"\n          />\n        </div>\n        <div v-if=\"tab === 'video' || tab === 'playlist'\" class=\"flex self-center\">\n          <label\n            v-for=\"orders in Orders\"\n            :key=\"orders.value\"\n            class=\"px-2 py-1 cursor-pointer text-gray-400 text-sm font-semibold md:text-base md:font-bold md:px-5 md:py-2\"\n            :class=\"{ 'text-black rounded-full bg-gray-100 dark:text-white dark:bg-gray-500': orders.value === order }\"\n            @click=\"changeOrder(orders.value)\"\n            v-text=\"orders.name\"\n          />\n        </div>\n      </div>\n\n      <!-- Videos -->\n      <SearchVideo\n        v-if=\"tab === Tabs[0].value\"\n        v-model:query=\"queryWord\"\n        v-model:limit=\"limit\"\n        v-model:offset=\"offset\"\n        v-model:order=\"order\"\n        v-model:visible-site=\"visibleSite\"\n        v-model:page-count=\"pageCount\"\n      />\n\n      <!-- Playlists -->\n      <SearchPlaylist\n        v-else-if=\"tab === Tabs[1].value\"\n        v-model:query=\"queryWord\"\n        v-model:limit=\"limit\"\n        v-model:offset=\"offset\"\n        v-model:order=\"order\"\n        v-model:page-count=\"pageCount\"\n      />\n    </div>\n    <PvPagination\n      v-model:page-count=\"pageCount\"\n      v-model:page=\"page\"\n      @previous=\"jumpToPreviousPage\"\n      @next=\"jumpToNextPage\"\n      @change=\"jumpToSelectedPage\"\n    />\n    <BackTop />\n  </LayoutDefault>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ref } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\nimport AutoComplete from '@/search/components/AutoComplete.vue'\nimport BackTop from '@/ui/components/BackTop.vue'\nimport SearchVideo from '@/search/components/SearchVideo.vue'\nimport SearchPlaylist from '@/search/components/SearchPlaylist.vue'\nimport PvPagination from '@/ui/components/PvPagination.vue'\nimport { setSiteTitle } from '@/common/libs/setSiteTitle'\nimport { screenSizes } from '@/css'\n\nconst { t } = useI18n()\nconst route = useRoute()\nconst router = useRouter()\nconst pageCount = ref(0)\n\n/* Precess URL query */\nconst queryWord = computed(() => {\n  const query = String(route.query.i ? (Array.isArray(route.query.i) ? route.query.i.join(' ') : route.query.i) : '')\n  if (query)\n    setSiteTitle(t('search.search-result.title') + query)\n\n  return query\n})\nconst limit = computed(() => {\n  return Number(route.query.limit ? (Array.isArray(route.query.limit) ? route.query.limit[0] : route.query.limit) : 20)\n})\nconst offset = computed(() => {\n  return Number(route.query.page ? (Array.isArray(route.query.page) ? route.query.page[0] : route.query.page) : 0)\n})\nconst page = computed(() => offset.value + 1)\nconst Orders = [\n  { value: 'last_modified', name: t('search.search-result.order.last-modified') },\n  { value: 'video_oldest', name: t('search.search-result.order.video-oldest') },\n]\nconst order = computed(() =>\n  String(\n    route.query.order ? (Array.isArray(route.query.order) ? route.query.order[0] : route.query.order) : Orders[0].value,\n  ),\n)\nconst visibleSite = computed(() =>\n  String(\n    route.query.visible_site\n      ? Array.isArray(route.query.visible_site)\n        ? route.query.visible_site[0]\n        : route.query.visible_site\n      : localStorage.getItem('VisibleSite') || '',\n  ),\n)\nconst Tabs = [\n  {\n    value: 'video',\n    name: t('search.search-result.video.tab'),\n  },\n  {\n    value: 'playlist',\n    name: t('search.search-result.playlist.tab'),\n  },\n]\nconst tab = computed(() =>\n  String(route.query.tab ? (Array.isArray(route.query.tab) ? route.query.tab[0] : route.query.tab) : Tabs[0].value),\n)\n\n/* Change the router query to trigger the search function */\nfunction searchResult(searchContent: string): void {\n  const query = JSON.parse(JSON.stringify(route.query))\n  query.i = searchContent\n  query.page = 0\n  router.push({ path: route.path, query })\n}\nfunction jumpToPreviousPage(): void {\n  const query = JSON.parse(JSON.stringify(route.query))\n  query.page = offset.value - 1\n  router.push({ path: route.path, query })\n}\nfunction jumpToNextPage(): void {\n  const query = JSON.parse(JSON.stringify(route.query))\n  query.page = offset.value + 1\n  router.push({ path: route.path, query })\n}\nfunction jumpToSelectedPage(page: number): void {\n  const query = JSON.parse(JSON.stringify(route.query))\n  query.page = page - 1\n  router.push({ path: route.path, query })\n}\nfunction changeTab(value: string): void {\n  const query = JSON.parse(JSON.stringify(route.query))\n  query.page = 0\n  query.tab = value\n  delete query.visible_site\n  delete query.order\n  router.push({ path: route.path, query })\n}\nfunction changeOrder(value: string): void {\n  const query = JSON.parse(JSON.stringify(route.query))\n  query.page = 0\n  query.order = value\n  router.push({ path: route.path, query })\n}\n</script>\n"],"names":["t","useI18n","route","useRoute","router","useRouter","status","ref","errMsg","count","videos","query","limit","offset","order","visibleSite","pageCount","useVModels","props","emit","VisibleSites","result","loading","onError","fetchMore","useQuery","gql","watchEffect","startProgress","stopProgress","resultData","useResult","data","err","watch","backTop","previousQueryResult","fetchMoreResult","changeVisibleSites","value","query2","playlists","queryWord","computed","setSiteTitle","page","Orders","Tabs","tab","searchResult","searchContent","jumpToPreviousPage","jumpToNextPage","jumpToSelectedPage","page2","changeTab","changeOrder"],"mappings":"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"}