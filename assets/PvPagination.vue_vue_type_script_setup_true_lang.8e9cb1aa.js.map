{"version":3,"file":"PvPagination.vue_vue_type_script_setup_true_lang.8e9cb1aa.js","sources":["../../packages/ui/components/PvPagination.vue"],"sourcesContent":["<template>\n  <div v-if=\"pageCount - 1 && pageCount\" class=\"xs:text-xs\">\n    <div class=\"border-t pt-1 flex-1 flex justify-between items-center\">\n      <a\n        v-if=\"page !== 1\"\n        class=\"inline-flex items-center px-2 py-1 border border-purple-300 text-sm font-medium rounded-lg hover:text-gray-500 dark:bg-gray-600 dark:border-purple-900 dark:hover:bg-black md:px-4 md:py-2\"\n        @click=\"$emit('previous')\"\n        v-text=\"t('ui.pv-pagination.page-previous')\"\n      />\n      <a\n        v-else\n        disabled\n        class=\"inline-flex items-center px-2 py-1 border border-purple-300 text-sm font-medium rounded-lg dark:bg-gray-600 dark:border-purple-900 md:px-4 md:py-2\"\n        v-text=\"t('ui.pv-pagination.page-previous')\"\n      />\n      <i18n-t keypath=\"ui.pv-pagination.page-number\" tag=\"div\" :places=\"{ count: pageCount }\">\n        <template #count>\n          <input\n            v-model.number=\"currentPage\"\n            class=\"w-12 border rounded-md border-purple-400 p-1 shadow-inner dark:bg-gray-500\"\n            @keydown.enter=\"change\"\n            @blur=\"change\"\n          >\n        </template>\n        <template #total>\n          <span>{{ pageCount }}</span>\n        </template>\n      </i18n-t>\n      <a\n        v-if=\"page !== pageCount\"\n        class=\"inline-flex items-center px-2 py-1 border border-purple-300 text-sm font-medium rounded-lg hover:text-gray-500 dark:bg-gray-600 dark:border-purple-900 dark:hover:bg-black md:px-4 md:py-2\"\n        @click=\"$emit('next')\"\n        v-text=\"t('ui.pv-pagination.page-next')\"\n      />\n      <a\n        v-else\n        disabled\n        class=\"inline-flex items-center px-2 py-1 border border-purple-300 text-sm font-medium rounded-lg dark:bg-gray-600 dark:border-purple-900 md:px-4 md:py-2\"\n        v-text=\"t('ui.pv-pagination.page-next')\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useI18n } from 'vue-i18n'\nimport { ref, watchEffect } from 'vue'\nimport { useVModel } from '@vueuse/core'\nimport { MessageType, PvMessage } from '../libs/PvMessage'\n\nconst props = withDefaults(\n  defineProps<{\n    page?: number\n    pageCount?: number\n  }>(),\n  {\n    page: 1,\n    pageCount: 1,\n  },\n)\nconst emit = defineEmits<{\n  (event: 'previous'): void\n  (event: 'next'): void\n  (event: 'change', value: number): void\n  (event: 'update:page', value: number): void\n  (event: 'update:pageCount', value: number): void\n}>()\nconst { t } = useI18n()\nconst page = useVModel(props, 'page', emit)\nconst currentPage = ref(page.value)\nfunction change(): void {\n  if (\n    // page must not be NaN-like\n    isNaN(currentPage.value)\n    // page must be a integer\n    || !Number.isSafeInteger(currentPage.value)\n    // page must be greater than 0\n    || currentPage.value <= 0\n    // page must be lesser than page count\n    || currentPage.value > props.pageCount\n  ) {\n    PvMessage({ message: t('ui.pv-pagination.alert'), type: MessageType.warning })\n    return\n  }\n  // change page only if currentPage really changed\n  if (page.value !== currentPage.value) {\n    page.value = currentPage.value\n    emit('change', currentPage.value)\n  }\n}\nwatchEffect(() => {\n  currentPage.value = page.value\n})\n</script>\n"],"names":["t","useI18n","page","useVModel","props","emit","currentPage","ref","change","PvMessage","MessageType","watchEffect"],"mappings":"wjBAmEA,CAAA,EAAAA,GAAAC,IACAC,EAAAC,EAAAC,EAAA,OAAAC,CAAA,EACAC,EAAAC,EAAAL,EAAA,KAAA,EACA,SAAAM,GAAA,CACE,GAAA,MAAAF,EAAA,KAAA,GAAA,CAAA,OAAA,cAAAA,EAAA,KAAA,GAAAA,EAAA,OAAA,GAAAA,EAAA,MAAAF,EAAA,UAAA,CAUEK,EAAA,CAAA,QAAAT,EAAA,wBAAA,EAAA,KAAAU,EAAA,OAAA,CAAA,EACA,MAAA,CAGFR,EAAA,QAAAI,EAAA,QACEJ,EAAA,MAAAI,EAAA,MACAD,EAAA,SAAAC,EAAA,KAAA,EACF,CAEF,OAAAK,EAAA,IAAA,CACEL,EAAA,MAAAJ,EAAA,KAAyB,CAAA"}