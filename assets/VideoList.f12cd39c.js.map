{"version":3,"file":"VideoList.f12cd39c.js","sources":["../../packages/video/components/AdvancedSearch.vue","../../packages/video/VideoList.vue"],"sourcesContent":["<template>\n  <div\n    class=\"fixed max-h-full z-50 transform transition-transform duration-300 inset-x-0 bottom-0 overflow-auto p-3 bg-white dark:bg-gray-900 shadow border-purple-200 dark:border-gray-600 lt-sm:max-h-70vh lt-sm:rounded-t lt-sm:border-t sm:rounded-l sm:border-l sm:right-0 sm:inset-y-0 sm:left-auto sm:p-2 sm:w-95\"\n    :class=\"{ 'sm:translate-x-full translate-y-full sm:translate-y-0': !open }\"\n  >\n    <div class=\"w-full border-b p-1 pb-1.5 flex justify-between\">\n      <div class=\"flex items-center flex-nowrap space-x-1\">\n        <div class=\"i-uil:search text-2xl transition-colors\" />\n        <div class=\"text-lg\">\n          {{ '高级搜索' }}\n        </div>\n      </div>\n      <div class=\"i-uil:times text-2xl transition-colors\" @click=\"open = false\" />\n    </div>\n    <div class=\"mt-4 space-y-3\">\n      <!-- Tag only or text and tag -->\n      <div class=\"flex justify-between space-x-6 items-center\">\n        <div class=\"whitespace-nowrap\">\n          {{ '搜索类型：' }}\n        </div>\n        <PvSelect v-model=\"qtype\" class=\"flex-1 max-w-64\" :item-list=\"qtypeList\" />\n      </div>\n      <!-- AND or OR -->\n      <!-- TODO: add OR function -->\n      <div class=\"flex justify-between space-x-2 items-center\">\n        <div class=\"whitespace-nowrap\">\n          {{ '包含关键字：' }}\n        </div>\n        <AutoComplete\n          v-model:keyword=\"searchContentAndOrNot\"\n          default-placeholder=\"输入标签或文本，用空格隔开\"\n          class=\"w-full\"\n          :show-tag-cnt=\"false\"\n          @search=\"addsearchContentAndOrNot()\"\n        />\n      </div>\n      <!-- NOT -->\n      <div class=\"flex justify-between space-x-6 items-center\">\n        <div class=\"whitespace-nowrap\">\n          {{ '排除标签：' }}\n        </div>\n        <AutoComplete\n          v-model:keyword=\"exceptContent\"\n          default-placeholder=\"只能输入标签哦，用空格隔开\"\n          class=\"w-full\"\n          :show-tag-cnt=\"false\"\n          @search=\"addexceptContent()\"\n        />\n      </div>\n      <!-- Order -->\n      <div class=\"flex justify-between space-x-6 items-center\">\n        <div class=\"whitespace-nowrap\">\n          {{ '排序方式：' }}\n        </div>\n        <PvSelect v-model=\"order\" class=\"flex-1 max-w-64\" :item-list=\"orderList\" />\n      </div>\n      <!-- Site -->\n      <div class=\"flex justify-between items-center\">\n        <div class=\"whitespace-nowrap\">\n          {{ '源网站：' }}\n        </div>\n        <div class=\"flex max-w-72 flex-wrap gap-x-1\">\n          <div\n            class=\"px-2 py-0.5 rounded-lg text-sm border border-purple-300 cursor-pointer transition transition-colors whitespace-nowrap mb-1 dark:border-gray-600\"\n            :class=\"{ 'bg-purple-400 dark:bg-indigo-800 text-white': visibleSites.findIndex((item) => item === '') !== -1 }\"\n            @click=\"changeVisibleSites()\"\n          >\n            {{ '全部' }}\n          </div>\n          <div\n            v-for=\"site in siteList\"\n            :key=\"site.value\"\n            class=\"px-2 py-0.5 rounded-lg text-sm border border-purple-300 cursor-pointer transition transition-colors whitespace-nowrap mb-1 dark:border-gray-600\"\n            :class=\"{ 'bg-purple-400 dark:bg-indigo-800 text-white': visibleSites.findIndex((item) => item === site.value) !== -1 }\"\n            @click=\"changeVisibleSites(site.value)\"\n          >\n            {{ site.name }}\n          </div>\n        </div>\n      </div>\n      <!-- Rank -->\n      <!-- TODO: search for rank is not supposed -->\n      <!-- <div class=\"flex justify-between space-x-6 items-end\">\n          <div class=\"whitespace-nowrap\">{{ '视频等级：' }}</div>\n          <PvSelect :selected=\"rank\" :item-list=\"rankList\" @update:selected=\"(v) => (rank = v)\" />\n        </div> -->\n      <!-- Date -->\n      <div>\n        <div class=\"mb-1 whitespace-nowrap\">\n          {{ '原视频发布时间：' }}\n        </div>\n        <div class=\"flex flex-col space-y-0.5\">\n          <div class=\"flex justify-between items-center\">\n            <PvSelect\n              v-model=\"beforeAfterEqualDate1\"\n              :item-list=\"beforeAfterEqualList\"\n            />\n            <div class=\"flex flex-row flex-nowrap items-center gap-x-0.5\">\n              <input\n                v-model.number=\"year1\"\n                :disabled=\"beforeAfterEqualDate1 === ''\"\n                placeholder=\"年\"\n                class=\"focus:outline-none w-15 border rounded-md border-purple-300 px-1 py-0.5 shadow-inner dark:border-gray-700 dark:bg-gray-500\"\n              >\n              <label>-</label>\n              <input\n                v-model.number=\"month1\"\n                :disabled=\"beforeAfterEqualDate1 === ''\"\n                placeholder=\"月\"\n                class=\"focus:outline-none w-10 border rounded-md border-purple-300 px-1 py-0.5 shadow-inner dark:border-gray-700 dark:bg-gray-500\"\n              >\n              <label>-</label>\n              <input\n                v-model.number=\"day1\"\n                :disabled=\"beforeAfterEqualDate1 === ''\"\n                placeholder=\"日\"\n                class=\"focus:outline-none w-10 border rounded-md border-purple-300 px-1 py-0.5 shadow-inner dark:border-gray-700 dark:bg-gray-500\"\n              >\n            </div>\n          </div>\n          <div class=\"flex justify-between items-center\">\n            <PvSelect\n              v-model=\"beforeAfterEqualDate2\"\n              :item-list=\"beforeAfterEqualList\"\n            />\n            <div class=\"flex flex-row flex-nowrap items-center gap-x-0.5\">\n              <input\n                v-model.number=\"year2\"\n                :disabled=\"beforeAfterEqualDate2 === ''\"\n                placeholder=\"年\"\n                class=\"focus:outline-none w-15 border rounded-md border-purple-300 px-1 py-0.5 shadow-inner dark:border-gray-700 dark:bg-gray-500\"\n              >\n              <label>-</label>\n              <input\n                v-model.number=\"month2\"\n                :disabled=\"beforeAfterEqualDate2 === ''\"\n                placeholder=\"月\"\n                class=\"focus:outline-none w-10 border rounded-md border-purple-300 px-1 py-0.5 shadow-inner dark:border-gray-700 dark:bg-gray-500\"\n              >\n              <label>-</label>\n              <input\n                v-model.number=\"day2\"\n                :disabled=\"beforeAfterEqualDate2 === ''\"\n                placeholder=\"日\"\n                class=\"focus:outline-none w-10 border rounded-md border-purple-300 p-1 py-0.5 shadow-inner dark:border-gray-700 dark:bg-gray-500\"\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- Tags number -->\n      <div class=\"flex justify-between items-center\">\n        <div class=\"whitespace-nowrap\">\n          {{ '标签数量：' }}\n        </div>\n        <div class=\"flex flex-row items-center gap-1\">\n          <PvSelect\n            v-model=\"moreLessEqualTagNum\"\n            :item-list=\"moreLessEqualList\"\n          />\n          <input\n            v-model.number=\"tagNum\"\n            :disabled=\"moreLessEqualTagNum === ''\"\n            class=\"w-12 border rounded-md border-purple-300 px-1 py-0.5 shadow-inner dark:border-gray-700 dark:bg-gray-500\"\n          >\n        </div>\n      </div>\n      <!-- Show blocked videos -->\n      <!-- TODO: search for showing block videos is not supposed -->\n      <!-- <div class=\"flex justify-between items-center\">\n        <div class=\"whitespace-nowrap\">{{ '展示被屏蔽的视频' }}</div>\n        <PvSwitch :check=\"showBlockedVideos\" />\n      </div> -->\n      <!-- Only show autotaged videos -->\n      <div class=\"flex justify-between items-center\">\n        <div class=\"whitespace-nowrap\">\n          {{ '仅展示待人工整理标签的视频' }}\n        </div>\n        <PvSwitch v-model=\"onlyShowAutotagedVideos\" />\n      </div>\n      <!-- Reset or search -->\n      <div class=\"flex justify-around border-t pt-3\">\n        <PvBotton @click=\"reset()\">\n          {{ '重置' }}\n        </PvBotton>\n        <PvBotton @click=\"search()\">\n          {{ '搜索' }}\n        </PvBotton>\n      </div>\n      <!-- More infomation -->\n      <div>\n        <div class=\"text-xs italic\">\n          <div>{{ '#更多高级筛选功能请参考：' }}</div>\n          <a\n            href=\"https://patchyvideo.wiki/zh/SearchSystem\"\n            target=\"_blank\"\n            class=\"text-purple-600 transition transition-colors dark:text-purple-300 hover:text-purple-800 dark:hover:text-purple-400\"\n          >{{ '搜索系统 - PatchyVideo Wiki' }}</a>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Mask -->\n  <Transition\n    enter-active-class=\"transition-all duration-200\"\n    enter-from-class=\"bg-opacity-0\"\n    leave-active-class=\"transition-all duration-200\"\n    leave-to-class=\"bg-opacity-0\"\n  >\n    <div v-if=\"open\" class=\"fixed inset-0 z-49\" @click=\"open = false\" />\n  </Transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ref, watch } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n// import { useI18n } from 'vue-i18n'\nimport { useVModel } from '@vueuse/core'\nimport PvSelect from '@/ui/components/PvSelect.vue'\nimport PvSwitch from '@/ui/components/PvSwitch.vue'\nimport AutoComplete from '@/search/components/AutoComplete.vue'\nimport PvBotton from '@/ui/components/PvBotton.vue'\nimport { MessageType, PvMessage } from '@/ui/libs/PvMessage'\n\nconst props = defineProps({\n  open: {\n    type: Boolean,\n    default: false,\n    requred: true,\n  },\n})\nconst emit = defineEmits<{\n  (event: 'update:open', value: boolean): void\n}>()\n\n// const { t } = useI18n()\nconst route = useRoute()\nconst router = useRouter()\n\nconst open = useVModel(props, 'open', emit)\n\n/* initialize additional constraint with url */\nconst additionalConstraintUrl = ref(\n  String(route.query.a ? (Array.isArray(route.query.a) ? route.query.a[0] : route.query.a) : ''),\n)\nconst additionalConstraintObject = ref(\n  additionalConstraintUrl.value === ''\n    ? {\n        searchContentAndOrNot: '',\n        exceptContent: '',\n        visibleSites: [''],\n        date1: {\n          beforeAfterEqualDate1: '',\n          year1: '',\n          month1: '',\n          day1: '',\n        },\n        date2: {\n          beforeAfterEqualDate2: '',\n          year2: '',\n          month2: '',\n          day2: '',\n        },\n        tag: {\n          moreLessEqualTagNum: '',\n          tagNum: '',\n        },\n        onlyShowAutotagedVideos: false,\n      }\n    : JSON.parse(decodeURI(window.atob(additionalConstraintUrl.value))),\n)\n\n/* Qtype */\nconst qtype = ref(\n  String(route.query.qtype ? (Array.isArray(route.query.qtype) ? route.query.qtype[0] : route.query.qtype) : 'tag'),\n)\nconst qtypeList = [\n  {\n    name: '标签/文本模式',\n    value: 'tag',\n  },\n  {\n    name: '仅文本模式',\n    value: 'text',\n  },\n]\n\n/* AND or OR */\nconst searchContentAndOrNot = ref(additionalConstraintObject.value.searchContentAndOrNot)\nfunction addsearchContentAndOrNot(): void {}\n\n/* Except */\nconst exceptContent = ref(additionalConstraintObject.value.exceptContent)\nfunction addexceptContent(): void {}\n\n/* Order */\nconst order = ref(\n  String(\n    route.query.order ? (Array.isArray(route.query.order) ? route.query.order[0] : route.query.order) : 'last_modified',\n  ),\n)\nconst orderList = [\n  { value: 'latest', name: '索引时间正序' },\n  { value: 'oldest', name: '索引时间倒序' },\n  { value: 'video_latest', name: '原视频发布正序' },\n  { value: 'video_oldest', name: '原视频发布倒序' },\n  { value: 'last_modified', name: '最近修改顺序' },\n]\n\n/* Site */\nconst visibleSites = ref<('' | 'bili' | 'nico' | 'ytb' | 'twitter' | 'acfun' | 'zcool' | 'ipfs' | 'weibo-mobile')[]>(\n  additionalConstraintObject.value.visibleSites,\n)\nconst siteList: {\n  name: string\n  value: '' | 'bili' | 'nico' | 'ytb' | 'twitter' | 'acfun' | 'zcool' | 'ipfs' | 'weibo-mobile'\n}[] = [\n  { name: 'Bilibili', value: 'bili' },\n  { name: 'Nicovideo', value: 'nico' },\n  { name: 'YouTube', value: 'ytb' },\n  { name: 'Twitter', value: 'twitter' },\n  { name: 'Acfun', value: 'acfun' },\n  { name: '微博', value: 'weibo-mobile' },\n  { name: '站酷', value: 'zcool' },\n  { name: 'IPFS', value: 'ipfs' },\n]\nfunction changeVisibleSites(\n  value: '' | 'bili' | 'nico' | 'ytb' | 'twitter' | 'acfun' | 'zcool' | 'ipfs' | 'weibo-mobile' = '',\n): void {\n  if (value === '') { visibleSites.value = [''] }\n  else {\n    const indexOfSite = visibleSites.value.indexOf(value)\n    if (indexOfSite !== -1) {\n      visibleSites.value.splice(indexOfSite, 1)\n      if (visibleSites.value.length === 0)\n        visibleSites.value = ['']\n    }\n    else {\n      visibleSites.value.push(value)\n      const indexOfAll = visibleSites.value.indexOf('')\n      if (indexOfAll !== -1)\n        visibleSites.value.splice(indexOfAll, 1)\n    }\n  }\n}\n\n/* Rank */\n/* TODO: search for rank is not supposed */\n// const rank = ref('3')\n// const rankList: {\n//   name: '仅管理员可见' | '登录用户可见' | '发布者和管理员可见' | '所有人可见'\n//   value: '0' | '1' | '2' | '3'\n// }[] = [\n//   { name: '仅管理员可见', value: '0' },\n//   { name: '发布者和管理员可见', value: '1' },\n//   { name: '登录用户可见', value: '2' },\n//   { name: '所有人可见', value: '3' },\n// ]\n\n/* Date */\nconst beforeAfterEqualList = [\n  { name: '晚于', value: '>' },\n  { name: '早于', value: '<' },\n  { name: '等于', value: '=' },\n  { name: '不计', value: '' },\n]\nconst year1 = ref(additionalConstraintObject.value.date1.year1)\nconst month1 = ref(additionalConstraintObject.value.date1.month1)\nconst day1 = ref(additionalConstraintObject.value.date1.day1)\nconst beforeAfterEqualDate1 = ref<string>(additionalConstraintObject.value.date1.beforeAfterEqualDate1)\nwatch(beforeAfterEqualDate1, (newv) => {\n  if (newv === '') {\n    year1.value = ''\n    month1.value = ''\n    day1.value = ''\n  }\n})\nconst year2 = ref(additionalConstraintObject.value.date2.year2)\nconst month2 = ref(additionalConstraintObject.value.date2.month2)\nconst day2 = ref(additionalConstraintObject.value.date2.day2)\nconst beforeAfterEqualDate2 = ref<string>(additionalConstraintObject.value.date2.beforeAfterEqualDate2)\nwatch(beforeAfterEqualDate2, (newv) => {\n  if (newv === '') {\n    year2.value = ''\n    month2.value = ''\n    day2.value = ''\n  }\n})\n\n/* Tag number */\nconst moreLessEqualList = [\n  { name: '大于', value: '>' },\n  { name: '小于', value: '<' },\n  { name: '等于', value: '=' },\n  { name: '不计', value: '' },\n]\nconst tagNum = ref(additionalConstraintObject.value.tag.tagNum)\nconst moreLessEqualTagNum = ref<string>(additionalConstraintObject.value.tag.moreLessEqualTagNum)\nwatch(moreLessEqualTagNum, (newv) => {\n  if (newv === '')\n    tagNum.value = ''\n})\n\n/* Show blocked videos */\n/* TODO: search for showing block videos is not supposed */\n// const showBlockedVideos = ref(false)\n\n/* Only show autotaged videos */\nconst onlyShowAutotagedVideos = ref(additionalConstraintObject.value.onlyShowAutotagedVideos)\n\n/* Reset */\nfunction reset() {\n  qtype.value = 'tag'\n  searchContentAndOrNot.value = ''\n  exceptContent.value = ''\n  order.value = 'last_modified'\n  visibleSites.value = ['']\n  beforeAfterEqualDate1.value = ''\n  year1.value = ''\n  month1.value = ''\n  day1.value = ''\n  beforeAfterEqualDate2.value = ''\n  year2.value = ''\n  month2.value = ''\n  day2.value = ''\n  moreLessEqualTagNum.value = ''\n  tagNum.value = ''\n  onlyShowAutotagedVideos.value = false\n}\n\n/* Search */\nfunction checkSubmitContent(): boolean {\n  // Check date\n  if (\n    beforeAfterEqualDate1.value !== ''\n    && (isNaN(Number(year1.value))\n      || !Number.isSafeInteger(year1.value)\n      || Number(year1.value) <= 0\n      || isNaN(Number(month1.value))\n      || !Number.isSafeInteger(month1.value)\n      || Number(month1.value) <= 0\n      || isNaN(Number(day1.value))\n      || !Number.isSafeInteger(day1.value)\n      || Number(day1.value) <= 0)\n  ) {\n    PvMessage({ message: '请检查原视频发布时间项1的填写是否正确！', type: MessageType.warning })\n    return false\n  }\n  if (\n    beforeAfterEqualDate2.value !== ''\n    && (isNaN(Number(year2.value))\n      || !Number.isSafeInteger(year2.value)\n      || Number(year2.value) <= 0\n      || isNaN(Number(month2.value))\n      || !Number.isSafeInteger(month2.value)\n      || Number(month2.value) <= 0\n      || isNaN(Number(day2.value))\n      || !Number.isSafeInteger(day2.value)\n      || Number(day2.value) <= 0)\n  ) {\n    PvMessage({ message: '请检查原视频发布时间项2的填写是否正确！', type: MessageType.warning })\n    return false\n  }\n  // Check tag\n  if (\n    moreLessEqualTagNum.value !== ''\n    && (isNaN(Number(tagNum.value)) || !Number.isSafeInteger(tagNum.value) || Number(tagNum.value) < 0)\n  ) {\n    PvMessage({ message: '请检查标签数量项的填写是否正确！', type: MessageType.warning })\n    return false\n  }\n  return true\n}\nconst additionalConstraintBase64 = computed(() => {\n  return window.btoa(\n    encodeURI(\n      JSON.stringify({\n        searchContentAndOrNot: searchContentAndOrNot.value,\n        exceptContent: exceptContent.value,\n        visibleSites: visibleSites.value,\n        date1: {\n          beforeAfterEqualDate1: beforeAfterEqualDate1.value,\n          year1: year1.value,\n          month1: month1.value,\n          day1: day1.value,\n        },\n        date2: {\n          beforeAfterEqualDate2: beforeAfterEqualDate2.value,\n          year2: year2.value,\n          month2: month2.value,\n          day2: day2.value,\n        },\n        tag: {\n          moreLessEqualTagNum: moreLessEqualTagNum.value,\n          tagNum: tagNum.value,\n        },\n        onlyShowAutotagedVideos: onlyShowAutotagedVideos.value,\n      }),\n    ),\n  )\n})\nfunction search(): void {\n  if (!checkSubmitContent())\n    return\n  const query = { qtype: qtype.value, order: order.value, a: additionalConstraintBase64.value }\n  router.push({ path: route.path, query })\n  open.value = false\n}\n</script>\n","<template>\n  <LayoutDefault>\n    <div class=\"p-2 md:p-10 md:m-auto xl:w-9/10 2xl:w-8/10\">\n      <div v-if=\"status === 'loading'\">\n        <div\n          class=\"border-b pb-1\"\n        >\n          <span class=\"inline-block w-36 rounded-md bg-gray-300 dark:bg-gray-600\">&nbsp;</span>\n        </div>\n        <div class=\"p-1 text-xs text-right md:text-sm\">\n          {{ t('video.video-list.main-body.tips') }}\n        </div>\n        <!-- Mobile View -->\n        <div v-if=\"screenSizes['<md']\">\n          <div v-for=\"index in limit\" :key=\"index\" class=\"py-1 flex hover:bg-gray-50 dark:hover:bg-gray-800\">\n            <div class=\"w-2/5 mr-0.5\">\n              <CoverPlaceholder class=\"rounded-md\" />\n            </div>\n            <div class=\"w-3/5 text-sm pb-1 flex flex-wrap content-between\">\n              <div\n                class=\"line-clamp-2 overflow-ellipsis overflow-hidden rounded-md w-full bg-gray-400 dark:bg-gray-600\"\n              >\n                &nbsp;\n              </div>\n              <div class=\"flex text-xs h-4 align-middle rounded-md w-2/5 bg-gray-400 dark:bg-gray-600\" />\n            </div>\n          </div>\n        </div>\n        <!-- Desktop View -->\n        <div v-else class=\"search-result-backimg justify-evenly flex-wrap flex\">\n          <div\n            v-for=\"index in limit\"\n            :key=\"index\"\n            class=\"w-12/50 my-2 border border-purple-400 shadow-sm rounded-lg bg-white bg-opacity-50 dark:border-purple-800 dark:bg-gray-900\"\n          >\n            <CoverPlaceholder class=\"rounded-md\" />\n            <div class=\"p-3 text-left text-sm lg:text-base\">\n              <div class=\"line-clamp-2 overflow-ellipsis overflow-hidden rounded-md bg-gray-400 dark:bg-gray-600\">\n                &nbsp;\n              </div>\n              <div class=\"flex text-xs h-4 mt-1 align-middle rounded-md bg-gray-300 dark:bg-gray-600\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-else-if=\"status === 'error'\">\n        <div>{{ t('video.video-list.main-body.failed.search-failed') }}</div>\n        <div>{{ t('video.video-list.main-body.failed.search-failed-reason') + errMsg }}</div>\n      </div>\n      <div v-else-if=\"status === 'result'\">\n        <div\n          class=\"border-b pb-1\"\n          v-text=\"t('video.video-list.main-body.successful.search-result-count', { count })\"\n        />\n        <div class=\"p-1 text-xs text-right md:text-sm\">\n          {{ t('video.video-list.main-body.tips') }}\n        </div>\n        <!-- Mobile View -->\n        <div v-if=\"screenSizes['<md']\">\n          <RouterLink\n            v-for=\"video in videos\"\n            :key=\"video.item.title\"\n            class=\"py-1 flex hover:bg-gray-50 dark:hover:bg-gray-800\"\n            :to=\"`/video/${video.id.toHexString()}`\"\n          >\n            <div class=\"relative w-2/5 mr-0.5\">\n              <Cover :title=\"video.item.title\" :cover-image=\"video.item.coverImage\" class=\"rounded-sm\" />\n              <div\n                v-if=\"video.clearence === 0\"\n                class=\"absolute flex flex-col justify-center items-center top-0 bottom-0 w-full bg-gray-200 bg-opacity-80 hover:bg-opacity-20 transition-background-color\"\n              >\n                <div class=\"i-uil:eye-slash text-4xl\" />\n                <div class=\"text-lg\">\n                  {{ t('video.video-list.video.hidden') }}\n                </div>\n              </div>\n            </div>\n            <div class=\"flex flex-wrap content-between w-3/5 pb-1 text-sm\">\n              <div v-if=\"video.item.partName\" class=\"overflow-hidden w-full\">\n                <a class=\"inline-block w-full truncate\">{{ video.item.title }}</a>\n                <div class=\"text-xs inline-block w-full truncate text-gray-600 dark:text-gray-300\">\n                  <label class=\"font-semibold\">{{ `P${pageOfVideo(video.item.url)}:` }}</label>{{ video.item.partName }}\n                </div>\n              </div>\n              <a v-else class=\"line-clamp-2 overflow-ellipsis overflow-hidden w-full\">{{ video.item.title }}</a>\n              <div class=\"flex text-xs h-4 align-middle\" :title=\"video.item.site\">\n                <div>{{ t('video.video-list.video.source-site') }}</div>\n                <img class=\"cover h-full\" :src=\"getSiteImage(video.item.site)\" :alt=\"video.item.site\">\n              </div>\n            </div>\n          </RouterLink>\n        </div>\n        <!-- Desktop View -->\n        <div v-else class=\"justify-evenly flex-wrap flex\">\n          <div\n            v-for=\"video in videos\"\n            :key=\"video.item.title\"\n            class=\"w-12/50 my-2 border border-purple-300 shadow-sm rounded-lg overflow-hidden bg-white bg-opacity-50 dark:border-gray-700 dark:bg-gray-900\"\n          >\n            <RouterLink\n              :to=\"`/video/${video.id.toHexString()}`\"\n            >\n              <div class=\"relative\">\n                <Cover :title=\"video.item.title\" :cover-image=\"video.item.coverImage\" />\n                <div\n                  v-if=\"video.clearence === 0\"\n                  class=\"absolute flex flex-col justify-center items-center top-0 bottom-0 w-full bg-gray-200 bg-opacity-80 hover:bg-opacity-20 transition-background-color\"\n                >\n                  <div class=\"i-uil:eye-slash text-8xl\" />\n                  <div class=\"text-2xl\">\n                    {{ t('video.video-list.video.hidden') }}\n                  </div>\n                </div>\n              </div>\n              <div class=\"p-3 text-left text-sm lg:text-base\">\n                <div v-if=\"video.item.partName\">\n                  <a class=\"inline-block w-full truncate\" :title=\"video.item.title\">{{ video.item.title }}</a>\n                  <div\n                    class=\"text-xs inline-block w-full truncate text-gray-600 dark:text-gray-300\"\n                    :title=\"video.item.partName\"\n                  >\n                    <label class=\"font-semibold\">{{ `P${pageOfVideo(video.item.url)}:` }}</label>{{ video.item.partName }}\n                  </div>\n                </div>\n                <a v-else class=\"line-clamp-2 overflow-ellipsis overflow-hidden\" :title=\"video.item.title\">{{\n                  video.item.title\n                }}</a>\n                <div class=\"flex text-xs h-4 align-middle\" :title=\"video.item.site\">\n                  <div>{{ t('video.video-list.video.source-site') }}</div>\n                  <img class=\"cover\" :src=\"getSiteImage(video.item.site)\" :alt=\"video.item.site\">\n                </div>\n              </div>\n            </RouterLink>\n            <!-- Hide Video Button (Admin Only) -->\n            <div v-if=\"auth.isAdmin\" class=\"text-right px-2 pb-1 cursor-pointer\">\n              <div v-if=\"hideVideoLoading.find(item => item === video.id.toHexString())\">\n                请求中...\n              </div>\n              <div\n                v-else-if=\"hideVideoFailed.find(item => item === video.id.toHexString())\" class=\"text-red transition-color hover:text-purple-600\" @click=\"hideVideo(video.id.toHexString())\"\n              >\n                隐藏失败！请点击重试\n              </div>\n              <div v-else-if=\"video.clearence === 0\">\n                已隐藏\n              </div>\n              <div v-else class=\"transition-color hover:text-purple-600\" @click=\"hideVideo(video.id.toHexString())\">\n                隐藏\n              </div>\n            </div>\n          </div>\n        </div>\n        <PvPagination\n          :page-count=\"pageCount\"\n          :page=\"page\"\n          @previous=\"jumpToPreviousPage\"\n          @next=\"jumpToNextPage\"\n          @change=\"jumpToSelectedPage\"\n        />\n      </div>\n    </div>\n    <!-- Advanced Search -->\n    <div\n      class=\"shadow fixed bottom-20 right-5 bg-gray-50 cursor-pointer p-2 transition-opacity rounded-full dark:bg-gray-800\"\n      :title=\"t('video.video-list.advanced-search.name')\"\n      @click=\"openAdvancedSearch()\"\n    >\n      <div class=\"i-uil:file-search-alt text-2xl\" />\n    </div>\n    <AdvancedSearch v-model:open=\"advancedSearch\" />\n    <BackTop />\n  </LayoutDefault>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ref, watch, watchEffect } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\nimport CoverPlaceholder from './components/CoverPlaceholder.vue'\nimport Cover from './components/Cover.vue'\nimport PvPagination from '@/ui/components/PvPagination.vue'\nimport AdvancedSearch from '@/video/components/AdvancedSearch.vue'\nimport BackTop from '@/ui/components/BackTop.vue'\nimport { useAuth } from '@/user'\nimport { gql, useQuery, useResult } from '@/graphql'\nimport type { Query, schema } from '@/graphql'\nimport { setSiteTitle } from '@/common/libs/setSiteTitle'\nimport { pageOfVideo } from '@/video/libs/biliHelper'\nimport { backTop } from '@/ui/libs/backTop'\nimport { getSiteImage } from '@/common/libs/imageUrl'\nimport { screenSizes } from '@/css'\nimport { getAdditionalConstraintString } from '@/video/libs/decodeAdditionalConstraint'\nimport { startProgress, stopProgress } from '@/nprogress'\nimport { MessageType, PvMessage } from '@/ui/libs/PvMessage'\n\nconst { t } = useI18n()\nsetSiteTitle(`${t('video.video-list.title')} - PatchyVideo`)\nconst route = useRoute()\nconst router = useRouter()\nconst auth = useAuth()\n\nconst status = ref<'loading' | 'result' | 'error'>()\nconst errMsg = ref('')\nconst count = ref(0)\nconst pageCount = ref(0)\nconst videos = ref<schema.Video[]>([])\n\n/* Precess URL query */\nconst limit = computed(() => {\n  return Number(route.query.limit ? (Array.isArray(route.query.limit) ? route.query.limit[0] : route.query.limit) : 20)\n})\nconst offset = computed(() =>\n  Number(route.query.page ? (Array.isArray(route.query.page) ? route.query.page[0] : route.query.page) : 0),\n)\nconst page = computed(() => offset.value + 1)\nconst qtype = computed(() =>\n  String(route.query.qtype ? (Array.isArray(route.query.qtype) ? route.query.qtype[0] : route.query.qtype) : 'tag'),\n)\nconst order = computed(() =>\n  String(\n    route.query.order ? (Array.isArray(route.query.order) ? route.query.order[0] : route.query.order) : 'last_modified',\n  ),\n)\nconst additionalConstraint = computed(() =>\n  String(route.query.a ? (Array.isArray(route.query.a) ? route.query.a[0] : route.query.a) : ''),\n)\n\nconst { result, loading, onError, fetchMore } = useQuery<Query>(\n  gql`\n    query ($offset: Int!, $limit: Int!, $query: String!, $qtype: String, $order: String!) {\n      listVideo(\n        para: { offset: $offset, limit: $limit, humanReadableTag: true, query: $query, qtype: $qtype, order: $order }\n      ) {\n        count\n        pageCount\n        videos {\n          id\n          item {\n            coverImage\n            title\n            site\n            cid\n            partName\n            url\n          }\n          clearence\n        }\n      }\n    }\n  `,\n  {\n    offset: offset.value * limit.value,\n    limit: limit.value,\n    query: getAdditionalConstraintString(additionalConstraint.value),\n    qtype: qtype.value,\n    order: order.value,\n  },\n  {\n    notifyOnNetworkStatusChange: true,\n  },\n)\nwatchEffect(() => {\n  if (loading.value) {\n    status.value = 'loading'\n    startProgress()\n  }\n  else {\n    status.value = 'result'\n    stopProgress()\n  }\n})\n\nconst resultData = useResult(result, null, data => data?.listVideo)\nwatchEffect(() => {\n  if (resultData.value) {\n    count.value = resultData.value.count\n    pageCount.value = resultData.value.pageCount\n    videos.value = resultData.value.videos.map((item) => { return { ...item } })\n  }\n})\nonError((err) => {\n  errMsg.value = err.message\n  status.value = 'error'\n})\n\n// Refresh query result for URL query change\nconst URLQuery = computed(() => route.query)\nwatch(URLQuery, () => {\n  backTop()\n  fetchMore({\n    variables: {\n      offset: offset.value * limit.value,\n      limit: limit.value,\n      query: getAdditionalConstraintString(additionalConstraint.value),\n      qtype: qtype.value,\n      order: order.value,\n    },\n    updateQuery(previousQueryResult, { fetchMoreResult }) {\n      if (!fetchMoreResult)\n        return previousQueryResult\n      return fetchMoreResult\n    },\n  })\n})\n\n/* Hide Video */\nconst hideVideoLoading = ref<string[]>([])\nconst hideVideoFailed = ref<string[]>([])\nconst hideVideo = async (vid: string) => {\n  if (hideVideoFailed.value.find(item => item === vid))\n    hideVideoFailed.value.splice(hideVideoFailed.value.findIndex(item => item === vid), 1)\n  hideVideoLoading.value.push(vid)\n  await fetch('https://patchyvideo.com/be/videos/condemn_video.do', {\n    method: 'POST',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({\n      vid,\n    }),\n    credentials: 'include',\n  })\n    .then(data => data.json())\n    .then((res) => {\n      // console.log(res)\n      if (res.status === 'SUCCEED' && videos.value.find(item => item.id.toHexString() === vid)) {\n        videos.value[videos.value.findIndex(item => item.id.toHexString() === vid)].clearence = 0\n      }\n      else {\n        PvMessage({ message: `vid为 ${vid} 的视频隐藏失败，请注意！`, type: MessageType.error })\n        hideVideoFailed.value.push(vid)\n        throw new Error(res)\n      }\n    })\n    .catch((e) => {\n      console.error(e)\n      PvMessage({ message: `vid为 ${vid} 的视频隐藏失败，请注意！`, type: MessageType.error })\n      hideVideoFailed.value.push(vid)\n    })\n  if (hideVideoLoading.value.find(item => item === vid))\n    hideVideoLoading.value.splice(hideVideoLoading.value.findIndex(item => item === vid), 1)\n}\n\n/* Show advanced search */\nconst advancedSearch = ref(false)\nfunction openAdvancedSearch() {\n  advancedSearch.value = true\n}\n\n/* Change the router query to trigger the search function */\nfunction jumpToPreviousPage(): void {\n  const query = JSON.parse(JSON.stringify(route.query))\n  query.page = offset.value - 1\n  router.push({ path: route.path, query })\n}\nfunction jumpToNextPage(): void {\n  const query = JSON.parse(JSON.stringify(route.query))\n  query.page = offset.value + 1\n  router.push({ path: route.path, query })\n}\nfunction jumpToSelectedPage(page: number): void {\n  const query = JSON.parse(JSON.stringify(route.query))\n  query.page = page - 1\n  router.push({ path: route.path, query })\n}\n</script>\n"],"names":["route","useRoute","router","useRouter","open","useVModel","props","emit","additionalConstraintUrl","ref","additionalConstraintObject","qtype","qtypeList","searchContentAndOrNot","addsearchContentAndOrNot","exceptContent","addexceptContent","order","orderList","visibleSites","siteList","changeVisibleSites","value","indexOfSite","indexOfAll","beforeAfterEqualList","year1","month1","day1","beforeAfterEqualDate1","watch","newv","year2","month2","day2","beforeAfterEqualDate2","moreLessEqualList","tagNum","moreLessEqualTagNum","onlyShowAutotagedVideos","reset","checkSubmitContent","PvMessage","MessageType","additionalConstraintBase64","computed","search","query","t","useI18n","setSiteTitle","auth","useAuth","status","errMsg","count","pageCount","videos","limit","offset","page","additionalConstraint","result","loading","onError","fetchMore","useQuery","gql","getAdditionalConstraintString","watchEffect","startProgress","stopProgress","resultData","useResult","data","item","err","URLQuery","backTop","previousQueryResult","fetchMoreResult","hideVideoLoading","hideVideoFailed","hideVideo","vid","res","e","advancedSearch","openAdvancedSearch","jumpToPreviousPage","jumpToNextPage","jumpToSelectedPage","page2"],"mappings":"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"}